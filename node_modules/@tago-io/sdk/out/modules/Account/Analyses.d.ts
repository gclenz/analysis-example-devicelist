import { GenericID, GenericToken } from "../../common/common.types";
import TagoIOModule, { GenericModuleParams } from "../../common/TagoIOModule";
import { AnalysisCreateInfo, AnalysisInfo, AnalysisQuery, ScriptFile } from "./analysis.types";
declare class Analyses extends TagoIOModule<GenericModuleParams> {
    list(query?: AnalysisQuery): Promise<AnalysisInfo[]>;
    create(data: AnalysisCreateInfo): Promise<{
        id: GenericID;
        token: GenericToken;
    }>;
    edit(analysisID: GenericID, data: Partial<AnalysisInfo>): Promise<string>;
    delete(analysisID: GenericID): Promise<string>;
    info(analysisID: GenericID): Promise<AnalysisInfo>;
    run(analysisID: GenericID, scope?: object): Promise<{
        analysis_token: GenericToken;
    }>;
    tokenGenerate(analysisID: GenericID): Promise<string>;
    uploadScript(analysisID: GenericID, file: ScriptFile): Promise<string>;
    downloadScript(analysisID: GenericID): Promise<{
        url: string;
        size_unit: string;
        size: number;
        expire_at: string;
    }>;
}
export default Analyses;
//# sourceMappingURL=Analyses.d.ts.map