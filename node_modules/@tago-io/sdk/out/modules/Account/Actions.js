"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const TagoIOModule_1 = __importDefault(require("../../common/TagoIOModule"));
class Actions extends TagoIOModule_1.default {
    /**
     * Retrieves a list with all actions from the account
     * @example
     * Default Query: {
     *   page: 1,
     *   fields: ["id", "name"],
     *   filter: {},
     *   amount: 20,
     *   orderBy: "name,asc",
     * }
     * @param query Search query params
     */
    list(query) {
        const result = this.doRequest({
            path: "/action",
            method: "GET",
            params: {
                page: (query === null || query === void 0 ? void 0 : query.page) || 1,
                fields: (query === null || query === void 0 ? void 0 : query.fields) || ["id", "name"],
                filter: (query === null || query === void 0 ? void 0 : query.filter) || {},
                amount: (query === null || query === void 0 ? void 0 : query.amount) || 20,
                orderBy: (query === null || query === void 0 ? void 0 : query.orderBy) ? `${query.orderBy[0]},${query.orderBy[1]}` : "name,asc",
            },
        });
        return result;
    }
    /**
     * Generates and retrieves a new action from the account
     * @param data Action object to create new TagoIO Action
     */
    create(data) {
        const result = this.doRequest({
            path: "/action",
            method: "POST",
            body: data,
        });
        return result;
    }
    /**
     * Modify any property of the action.
     * @param actionID Action ID
     * @param data Action Object to replace
     */
    edit(actionID, data) {
        const result = this.doRequest({
            path: `/action/${actionID}`,
            method: "PUT",
            body: data,
        });
        return result;
    }
    /**
     * Deletes an action from the account
     * @param actionID Action ID
     */
    delete(actionID) {
        const result = this.doRequest({
            path: `/action/${actionID}`,
            method: "DELETE",
        });
        return result;
    }
    /**
     * Gets information about the action
     * @param actionID Action ID
     */
    info(actionID) {
        const result = this.doRequest({
            path: `/action/${actionID}`,
            method: "GET",
        });
        return result;
    }
}
exports.default = Actions;
//# sourceMappingURL=Actions.js.map